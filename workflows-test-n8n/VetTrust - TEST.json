{
  "active": false,
  "connections": {
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "FTP1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Search Bexio Invoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP1": {
      "main": [
        [
          {
            "node": "FTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP": {
      "main": [
        [
          {
            "node": "Read Order File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "MySQL6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists": {
      "main": [
        [
          {
            "node": "Filter2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is Empty?": {
      "main": [
        [
          {
            "node": "Kein Lieferdatum angegeben",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Kein Lieferdatum angegeben": {
      "main": [
        [
          {
            "node": "Calc Delivery Date",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "MySQL7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calc Delivery Date": {
      "main": [
        [
          {
            "node": "MySQL8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter2": {
      "main": [
        [
          {
            "node": "is Empty?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Item Lists3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Add POS to Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add POS to Items1": {
      "main": [
        [
          {
            "node": "MySQL9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL6": {
      "main": [
        [
          {
            "node": "MySQL10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL9": {
      "main": [
        [
          {
            "node": "MySQL13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL11": {
      "main": [
        [
          {
            "node": "Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File": {
      "main": [
        [
          {
            "node": "Spreadsheet File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL13": {
      "main": [
        [
          {
            "node": "MySQL11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is Empty?1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Order Existing?": {
      "main": [
        [
          {
            "node": "is Empty?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Create Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Order File": {
      "main": [
        [
          {
            "node": "Is Order Existing?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is Empty?2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Bexio Invoice": {
      "main": [
        [
          {
            "node": "is Empty?2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create Bexio Invoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Bexio Invoice": {
      "main": [
        [
          {
            "node": "Create Bexio Invoice comment",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Order Bexio Infos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-11-07T20:41:52.950Z",
  "id": "7fh0ETdhIT1KuXlh",
  "meta": null,
  "name": "VetTrust - TEST",
  "nodes": [
    {
      "parameters": {},
      "id": "fbf69808-ebb9-4d20-9353-5d2c5bc3121b",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        160,
        360
      ]
    },
    {
      "parameters": {
        "protocol": "sftp",
        "operation": "list",
        "path": "=/senas/input/"
      },
      "id": "db9b94a0-a6d6-4a26-8c1c-ec93fe31d7cf",
      "name": "FTP1",
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        580,
        360
      ],
      "credentials": {
        "sftp": {
          "id": "3s4Z5m7HKHebiNmX",
          "name": "SFTP account - PHX"
        }
      }
    },
    {
      "parameters": {
        "protocol": "sftp",
        "path": "={{ $json.path }}"
      },
      "id": "a904d91c-6f9d-45bb-9305-f60e8b1d9259",
      "name": "FTP",
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        800,
        360
      ],
      "credentials": {
        "sftp": {
          "id": "3s4Z5m7HKHebiNmX",
          "name": "SFTP account - PHX"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Datum",
              "stringValue": "={{new Date(Math.round($json[\"Datum\"] - 25569) * 86400 * 1000)}} "
            }
          ]
        },
        "options": {}
      },
      "id": "00f58a11-eb1f-4265-b79e-298802ae923c",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        -100,
        -300
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "meta_data",
        "options": {}
      },
      "id": "7433f2e6-ab50-4045-9a58-8ceff6086c00",
      "name": "Item Lists",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        260,
        -640
      ]
    },
    {
      "parameters": {
        "jsCode": "if (items.length == 1 && Object.keys(items[0].json).length == 0) {\n  //console.log(\"Test 123\")\n    return  [{json: {empty: true}}];\n} else {\n  return items;\n}\n\n"
      },
      "id": "93958486-8239-471d-a2db-124d42b3bfec",
      "name": "is Empty?",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        -640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.empty }}",
              "value2": true
            }
          ]
        }
      },
      "id": "4539ca18-a31a-495f-be51-93e7323e67da",
      "name": "Kein Lieferdatum angegeben",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        880,
        -640
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get the current date\nconst currentDate = new Date();\n\n// Function to check if a given date is a Saturday or Sunday\nfunction isWeekend(date) {\n  const day = date.getDay();\n  return day === 0 || day === 6; // 0 is Sunday, 6 is Saturday\n}\n\n// Calculate the next business day\nfunction getNextBusinessDay(date) {\n  const nextDay = new Date(date);\n  do {\n    nextDay.setDate(nextDay.getDate() + 3);\n  } while (isWeekend(nextDay));\n  return nextDay;\n}\n\n// Check if today is a weekday\nif (isWeekend(currentDate)) {\n  // If it's a weekend, get the next business day\n  const nextBusinessDay = getNextBusinessDay(currentDate);\n  return [{ date: nextBusinessDay.toLocaleDateString('en-GB') }];\n} else {\n  // If it's a weekday, use the current date\n  return [{ date: currentDate.toLocaleDateString('en-GB') }];\n}\n"
      },
      "id": "2d55baa8-db8c-4179-85bf-e3b255dfda66",
      "name": "Calc Delivery Date",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        -720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.key }}",
              "value2": "thwdtp_delivery_datepicker"
            }
          ]
        }
      },
      "id": "5e2c3fe9-12c5-459a-b610-806d105583f4",
      "name": "Filter2",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        480,
        -640
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "line_items",
        "include": "selectedOtherFields",
        "fieldsToInclude": "id",
        "options": {}
      },
      "id": "e2aaea83-759e-4e0c-81a7-ebd875252993",
      "name": "Item Lists3",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 3,
      "position": [
        260,
        -440
      ]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{ $json.line_items.tax_class }}",
        "rules": {
          "rules": [
            {
              "value2": "reduzierter-preis-frigo"
            }
          ]
        },
        "fallbackOutput": 3
      },
      "id": "b97e75d6-8644-4ca2-b577-9a898ceb35ab",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        480,
        -440
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop through each item in the input item list\nfor (let i = 0; i < items.length; i++) {\n  // Calculate the current item's position (index + 1) multiplied by 10 and convert it to a string\n  const positionAsString = ((i + 1) * 10).toString();\n\n  // Add the position as a string to the item\n  items[i].json.position = positionAsString;\n}\n\n// Return the modified items\nreturn items;"
      },
      "id": "957c98b4-e7bd-4213-9c23-3efab980095e",
      "name": "Add POS to Items1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        880,
        -380
      ]
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "order_customer_delivery_address",
          "mode": "list",
          "cachedResultName": "order_customer_delivery_address"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "woo_customer_id",
              "value": "999999999"
            },
            {
              "column": "woo_order_id",
              "value": "999999999"
            },
            {
              "column": "name",
              "value": "={{ $json.Vorname }} {{ $json.Nachname }}"
            },
            {
              "column": "Strasse",
              "value": "={{ $json.Adresse }}"
            },
            {
              "column": "Zusatz",
              "value": "={{ $json.Firma }} {{ $json.Zusatz }}"
            },
            {
              "column": "city",
              "value": "={{ $json.Ort }}"
            },
            {
              "column": "postcode",
              "value": "={{ $json.PLZ }}"
            },
            {
              "column": "exec_id",
              "value": "={{ $execution.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5c776a41-8daf-47b1-a372-f2bfb9b4988c",
      "name": "MySQL6",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        260,
        -820
      ],
      "executeOnce": true,
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "table": {
          "__rl": true,
          "value": "order_customer_delivery_address",
          "mode": "list",
          "cachedResultName": "order_customer_delivery_address"
        },
        "dataMode": "defineBelow",
        "columnToMatchOn": "exec_id",
        "valueToMatchOn": "={{  $execution.id }}",
        "valuesToSend": {
          "values": [
            {
              "column": "delivery_date",
              "value": "={{ DateTime.fromFormat($('is Empty?').item.json[\"value\"], \"yyyy-MM-dd\").toFormat('dd.MM.yyyy') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a586cb35-27c0-46c9-a614-cd07f735759a",
      "name": "MySQL7",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        1100,
        -540
      ],
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "table": {
          "__rl": true,
          "value": "order_customer_delivery_address",
          "mode": "list",
          "cachedResultName": "order_customer_delivery_address"
        },
        "dataMode": "defineBelow",
        "columnToMatchOn": "exec_id",
        "valueToMatchOn": "={{  $execution.id }}",
        "valuesToSend": {
          "values": [
            {
              "column": "delivery_date",
              "value": "={{ $json.value }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f3f24b0f-f9cd-474b-9584-aa2a1561c8f1",
      "name": "MySQL8",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        1300,
        -720
      ],
      "alwaysOutputData": false,
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "order_lines",
          "mode": "list",
          "cachedResultName": "order_lines"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "Position-NR",
              "value": "={{ $json.position }}"
            },
            {
              "column": "Woo_order_id",
              "value": "={{ $json.id }}"
            },
            {
              "column": "Anzahl LE",
              "value": "={{ $json.line_items.quantity }}"
            },
            {
              "column": "Artikelnr",
              "value": "={{ $json.line_items.sku }}"
            },
            {
              "column": "Bezeichnung",
              "value": "={{ $json.line_items.name }}"
            },
            {
              "column": "Excec_id",
              "value": "={{ $execution.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4375e7a4-74ec-46d3-abb2-cd20b651babc",
      "name": "MySQL9",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        1100,
        -380
      ],
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "order_lines",
          "mode": "list",
          "cachedResultName": "order_lines"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "KOPF",
              "value": "POS"
            },
            {
              "column": "Position-NR",
              "value": "Position-NR"
            },
            {
              "column": "Anzahl LE",
              "value": "Anzahl LE"
            },
            {
              "column": "Artikelnr",
              "value": "Artikelnr"
            },
            {
              "column": "Bezeichnung",
              "value": "Bezeichnung"
            },
            {
              "column": "Chargenvorgabe",
              "value": "Chargenvorgabe"
            },
            {
              "column": "MHD-Vorgabe",
              "value": "MHD-Vorgabe"
            },
            {
              "column": "Pos-Text",
              "value": "Pos-Text"
            },
            {
              "column": "Excec_id",
              "value": "={{ $execution.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "18ea3d5d-54f4-4ae5-aa12-dba9f7916ce7",
      "name": "MySQL10",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        480,
        -820
      ],
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT `KOPF`, `Absender`, `Auftragsnr`, `Lieferdatum`, `Kundennummer`, `Name`, `Zusatz`, `Strasse`, `Land`, `PLZ`, `Ort`, `Lieferart`, `Tour`, `Bestellnummer`, `KopfText` FROM `order_temp`\nWHERE `Exec_id` = $1;",
        "options": {
          "queryReplacement": "={{ $execution.id }}"
        }
      },
      "id": "75089891-5cdc-4527-a959-7c0551986fef",
      "name": "MySQL11",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        1520,
        -380
      ],
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toFile",
        "fileFormat": "csv",
        "options": {
          "fileName": "=senas_{{ $json.Auftragsnr }}.xls",
          "headerRow": true
        }
      },
      "id": "f9e46ee7-dae3-45e4-8f57-8cb8d436c535",
      "name": "Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 2,
      "position": [
        1740,
        -380
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "\tINSERT INTO order_temp(`KOPF`, `Absender`, `Auftragsnr`, `Lieferdatum`, `Kundennummer`,`Name`,`Zusatz`,`Strasse`, `Land`, `PLZ`, `Ort`,`Lieferart`,`KopfText`, `Exec_id`) \n    SELECT \n    \t\"OK\",\n    \t`order_customer_delivery_address`.`Absender`,\n        `order_customer_delivery_address`.`woo_order_id`,\n        `order_customer_delivery_address`.`delivery_date`,\n        `order_customer_delivery_address`.`woo_customer_id`,\n        `order_customer_delivery_address`.`name`,\n        `order_customer_delivery_address`.`Zusatz`,\n        `order_customer_delivery_address`.`Strasse`,\n        \"CH\", #Land\n        `order_customer_delivery_address`.`postcode`,\n        `order_customer_delivery_address`.`city`,\n        \"3\", #Lieferart\n        `order_customer_delivery_address`.`KopfText`,\n        `order_customer_delivery_address`.`exec_id`\n    FROM `order_customer_delivery_address`\n    \n    WHERE `order_customer_delivery_address`.`exec_id` = $1;\n\nINSERT INTO order_temp(`Kopf`, `Absender`, `Auftragsnr`, `Lieferdatum`, `Kundennummer`, `Name`, `Zusatz`, `Strasse`, `Exec_id`) \n\tSELECT \n    \t`order_lines`.`KOPF`, \n        `order_lines`.`Position-NR`, \n        `order_lines`.`Anzahl LE`, \n        `order_lines`.`Artikelnr`,\n        `order_lines`.`Bezeichnung`,\n\t\t`order_lines`.`Chargenvorgabe`,\n\t\t`order_lines`.`MHD-Vorgabe`,\n        `order_lines`.`Pos-Text`,\n        `order_lines`.`Excec_id`\n    FROM `order_lines`\n  \tWHERE `order_lines`.`Excec_id` = $1;",
        "options": {
          "queryReplacement": "={{ $execution.id }}"
        }
      },
      "id": "9175e0c7-b571-44eb-ae83-2608937499a4",
      "name": "MySQL13",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        1320,
        -380
      ],
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const SEPARATOR = ';';\nconst NEWLINE = '\\r\\n';\nconst order = $input.first().json.Auftragsnr;\n\nconst rows = [Object.keys($input.first().json)];\n\nlet result = '';\n\nfor (let item of $input.all()) {\n  rows.push( Object.keys(item.json).map(key => item.json[key]) ) ;\n}\n\nfor (let row of rows) {\n  result += row.join(SEPARATOR) + NEWLINE;\n}\n\n\n\nreturn [{\n  json: {\n    csv_content: result,\n    order_number: order\n  }\n}];\n\n"
      },
      "id": "8dbcd510-06fe-4264-b8bd-6157186a5e76",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2160,
        -380
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "options": {
          "includeEmptyCells": true
        }
      },
      "id": "6e790388-bc59-4465-9e70-fc26912b9402",
      "name": "Spreadsheet File2",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 2,
      "position": [
        1960,
        -380
      ]
    },
    {
      "parameters": {
        "height": 278.9739478957916,
        "width": 403.95190380761534
      },
      "id": "dfda109e-b4a2-4277-bbef-d4c142d94ea2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        280
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "table": {
          "__rl": true,
          "value": "orders",
          "mode": "list",
          "cachedResultName": "orders"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "order_id",
              "value": "={{ $json[\"Bestell-Nr.\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3155ae2f-7d4d-46cf-992d-b99e780e6d0f",
      "name": "Is Order Existing?",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        1260,
        360
      ],
      "retryOnFail": false,
      "alwaysOutputData": true,
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const jsonData = $json;\n\nif (items.length == 1 && Object.keys(items[0].json).length == 0) {\n  //console.log(\"Test 123\")\n    return  [{json: {empty: true}}];\n} else {\n   return  jsonData;\n\n}\n\n"
      },
      "id": "1ac464c4-2331-446c-86cc-9d64d23a3c65",
      "name": "is Empty?1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        360
      ],
      "notesInFlow": true,
      "notes": "No Order found in DB -> Create"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44646aac-66d7-4551-a120-e67f6010c4d5",
              "leftValue": "={{ $json.empty }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6c5a9204-db2b-4ad3-baea-bd14cd40c142",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1680,
        360
      ]
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "orders",
          "mode": "list",
          "cachedResultName": "orders"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "order_id",
              "value": "={{$items(\"Read Order File\")[0].json[\"Bestell-Nr.\"]}}"
            },
            {
              "column": "dropshipping",
              "value": "=1"
            },
            {
              "column": "billingcompany",
              "value": "VetTrust AG"
            },
            {
              "column": "billingaddress_1",
              "value": "Bodenhof 2"
            },
            {
              "column": "billingcity",
              "value": "Küssnacht a/R"
            },
            {
              "column": "billingpostcode",
              "value": "6403 "
            },
            {
              "column": "shippingfirst_name",
              "value": "={{ $items(\"Read Order File\")[0].json[\"Vorname\"]}}"
            },
            {
              "column": "shippinglast_name",
              "value": "={{ $items(\"Read Order File\")[0].json[\"Nachname\"]}}"
            },
            {
              "column": "shippingcompany",
              "value": "={{ $items(\"Read Order File\")[0].json[\"Firma\"]}}"
            },
            {
              "column": "shippingaddress_1",
              "value": "={{ $items(\"Read Order File\")[0].json[\"Adresse\"]}}"
            },
            {
              "column": "shippingaddress_2",
              "value": "={{ $items(\"Read Order File\")[0].json[\"Zusatz\"]}}"
            },
            {
              "column": "shippingcity",
              "value": "={{ $items(\"Read Order File\")[0].json[\"Ort\"]}}"
            },
            {
              "column": "shippingpostcode",
              "value": "={{ $items(\"Read Order File\")[0].json[\"PLZ\"]}}"
            },
            {
              "column": "created_via",
              "value": "Dropshipping"
            },
            {
              "column": "shipping_method_id",
              "value": "35"
            },
            {
              "column": "exec_id",
              "value": "={{ $execution.id }}"
            },
            {
              "column": "billingaddress_2",
              "value": "={{ $items(\"Read Order File\")[0].json[\"Zusatz\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "a6750e1b-8296-4af9-ab1f-17e94784f407",
      "name": "Create Order",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        1920,
        220
      ],
      "alwaysOutputData": false,
      "retryOnFail": false,
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c0613e2e-479a-462a-b140-9bff0862fa9a",
      "name": "Read Order File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 2,
      "position": [
        1060,
        360
      ]
    },
    {
      "parameters": {
        "content": "## Fixed Vettrust Address\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)"
      },
      "id": "c434c905-6627-4d39-b3f3-43fc92f01eed",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1680,
        60
      ]
    },
    {
      "parameters": {
        "jsCode": "const jsonData = $json;\n\nif (items.length == 1 && Object.keys(items[0].json).length == 0) {\n  //console.log(\"Test 123\")\n    return  [{json: {empty: true}}];\n} else {\n   return  jsonData;\n\n}\n\n"
      },
      "id": "bf3df5b3-cb7d-42d8-a5d8-b68faa4f17d0",
      "name": "is Empty?2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        820
      ],
      "notesInFlow": true,
      "notes": "No Order found in DB -> Create"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "44646aac-66d7-4551-a120-e67f6010c4d5",
              "leftValue": "={{ $json.empty }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "916067fd-f1fe-4cf4-88c5-72c012570c9c",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1000,
        820
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.bexio.com/2.0/kb_invoice/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "[\n    {\n        \"field\": \"contact_id\",\n        \"value\": 3,\n        \"criteria\": \"=\"\n    },\n    {\n        \"field\": \"kb_item_status_id\",\n        \"value\": 7,\n        \"criteria\": \"=\"\n    },\n    {\n        \"field\": \"title\",\n        \"value\": \"Webshop Bestellungen\",\n        \"criteria\": \"=\"\n    }\n]",
        "options": {}
      },
      "id": "40346460-95fc-496e-9a18-c82ef73d237e",
      "name": "Search Bexio Invoice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        560,
        820
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "W9Ui8hTjsB8ipoET",
          "name": "TEST - Bexio"
        }
      }
    },
    {
      "parameters": {
        "content": "## Bexio Status\n7 = Draft",
        "height": 85.59149319732386,
        "width": 185.4337616780375
      },
      "id": "58581d91-6841-4c84-b8b3-993e7a4fddac",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        520,
        740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.bexio.com/2.0/kb_invoice",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n    \"contact_id\": 3,\n    \"user_id\": 1,\n    \"title\": \"Webshop Bestellungen\"\n}",
        "options": {}
      },
      "id": "240e384c-9ca0-4ab1-b093-84278e1cca7e",
      "name": "Create Bexio Invoice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1220,
        680
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "W9Ui8hTjsB8ipoET",
          "name": "TEST - Bexio"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.bexio.com/2.0/kb_invoice/{{ $json.id }}/comment",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"text\": \"*** Rechnung erstellt durch Workflow ***\",\n  \"user_id\": 1,\n  \"is_public\": false\n}",
        "options": {}
      },
      "id": "5224908b-de3f-46b5-9dee-29b4b43ec59f",
      "name": "Create Bexio Invoice comment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1440,
        680
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "W9Ui8hTjsB8ipoET",
          "name": "TEST - Bexio"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "table": {
          "__rl": true,
          "value": "orders",
          "mode": "list",
          "cachedResultName": "orders"
        },
        "dataMode": "defineBelow",
        "columnToMatchOn": "exec_id",
        "valueToMatchOn": "={{ $execution.id}}",
        "valuesToSend": {
          "values": [
            {
              "column": "bexio_customer_id",
              "value": "={{ $json.contact_id }}"
            },
            {
              "column": "bexio_invoice_id",
              "value": "={{ $json.id }}"
            },
            {
              "column": "bexio_invoice_nr",
              "value": "={{ $json.document_nr }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b96ff026-efe6-4026-9bb5-02a3b67254cc",
      "name": "Update Order Bexio Infos",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.2,
      "position": [
        1440,
        840
      ],
      "alwaysOutputData": false,
      "retryOnFail": false,
      "credentials": {
        "mySql": {
          "id": "6f9409J9OFpcD6mL",
          "name": "SENAS TEST - MySQL account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-01-06T17:09:22.000Z",
  "versionId": "5c4791be-437e-4516-b833-63cf294b92b2"
}